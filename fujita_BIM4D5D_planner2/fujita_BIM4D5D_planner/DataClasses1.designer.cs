#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace fujita_BIM4D5D_planner
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fujita_BIM4D5D_Planner")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBIM_5DPlanner(BIM_5DPlanner instance);
    partial void UpdateBIM_5DPlanner(BIM_5DPlanner instance);
    partial void DeleteBIM_5DPlanner(BIM_5DPlanner instance);
    partial void InsertCost_Master(Cost_Master instance);
    partial void UpdateCost_Master(Cost_Master instance);
    partial void DeleteCost_Master(Cost_Master instance);
    partial void InsertElement(Element instance);
    partial void UpdateElement(Element instance);
    partial void DeleteElement(Element instance);
    partial void InsertVirtual_Element_Type(Virtual_Element_Type instance);
    partial void UpdateVirtual_Element_Type(Virtual_Element_Type instance);
    partial void DeleteVirtual_Element_Type(Virtual_Element_Type instance);
    partial void InsertFormwork_Parameter(Formwork_Parameter instance);
    partial void UpdateFormwork_Parameter(Formwork_Parameter instance);
    partial void DeleteFormwork_Parameter(Formwork_Parameter instance);
    partial void InsertFormwork_Parameters_lb(Formwork_Parameters_lb instance);
    partial void UpdateFormwork_Parameters_lb(Formwork_Parameters_lb instance);
    partial void DeleteFormwork_Parameters_lb(Formwork_Parameters_lb instance);
    partial void InsertGlobal_Setting(Global_Setting instance);
    partial void UpdateGlobal_Setting(Global_Setting instance);
    partial void DeleteGlobal_Setting(Global_Setting instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMaterial_Option(Material_Option instance);
    partial void UpdateMaterial_Option(Material_Option instance);
    partial void DeleteMaterial_Option(Material_Option instance);
    partial void InsertMaterial_Variance(Material_Variance instance);
    partial void UpdateMaterial_Variance(Material_Variance instance);
    partial void DeleteMaterial_Variance(Material_Variance instance);
    partial void InsertMaterial_Variance_Subdivision(Material_Variance_Subdivision instance);
    partial void UpdateMaterial_Variance_Subdivision(Material_Variance_Subdivision instance);
    partial void DeleteMaterial_Variance_Subdivision(Material_Variance_Subdivision instance);
    partial void InsertMsprojoffice_Diff(Msprojoffice_Diff instance);
    partial void UpdateMsprojoffice_Diff(Msprojoffice_Diff instance);
    partial void DeleteMsprojoffice_Diff(Msprojoffice_Diff instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProject_Detail(Project_Detail instance);
    partial void UpdateProject_Detail(Project_Detail instance);
    partial void DeleteProject_Detail(Project_Detail instance);
    partial void InsertProject_Exclude_Category(Project_Exclude_Category instance);
    partial void UpdateProject_Exclude_Category(Project_Exclude_Category instance);
    partial void DeleteProject_Exclude_Category(Project_Exclude_Category instance);
    partial void InsertProject_Filter(Project_Filter instance);
    partial void UpdateProject_Filter(Project_Filter instance);
    partial void DeleteProject_Filter(Project_Filter instance);
    partial void InsertProject_Filter_Dtl(Project_Filter_Dtl instance);
    partial void UpdateProject_Filter_Dtl(Project_Filter_Dtl instance);
    partial void DeleteProject_Filter_Dtl(Project_Filter_Dtl instance);
    partial void InsertProject_Task_Detail(Project_Task_Detail instance);
    partial void UpdateProject_Task_Detail(Project_Task_Detail instance);
    partial void DeleteProject_Task_Detail(Project_Task_Detail instance);
    partial void InsertProject_Version(Project_Version instance);
    partial void UpdateProject_Version(Project_Version instance);
    partial void DeleteProject_Version(Project_Version instance);
    partial void InsertRebar_Formwork_Report(Rebar_Formwork_Report instance);
    partial void UpdateRebar_Formwork_Report(Rebar_Formwork_Report instance);
    partial void DeleteRebar_Formwork_Report(Rebar_Formwork_Report instance);
    partial void InsertRebar_Parameter(Rebar_Parameter instance);
    partial void UpdateRebar_Parameter(Rebar_Parameter instance);
    partial void DeleteRebar_Parameter(Rebar_Parameter instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertRevit_Msprojoffice(Revit_Msprojoffice instance);
    partial void UpdateRevit_Msprojoffice(Revit_Msprojoffice instance);
    partial void DeleteRevit_Msprojoffice(Revit_Msprojoffice instance);
    partial void InsertRevit_Project_Model(Revit_Project_Model instance);
    partial void UpdateRevit_Project_Model(Revit_Project_Model instance);
    partial void DeleteRevit_Project_Model(Revit_Project_Model instance);
    partial void InsertRevit_Project_Model_Test(Revit_Project_Model_Test instance);
    partial void UpdateRevit_Project_Model_Test(Revit_Project_Model_Test instance);
    partial void DeleteRevit_Project_Model_Test(Revit_Project_Model_Test instance);
    partial void InsertTask_Predecessor_Map(Task_Predecessor_Map instance);
    partial void UpdateTask_Predecessor_Map(Task_Predecessor_Map instance);
    partial void DeleteTask_Predecessor_Map(Task_Predecessor_Map instance);
    partial void InsertTask_Resource_Map(Task_Resource_Map instance);
    partial void UpdateTask_Resource_Map(Task_Resource_Map instance);
    partial void DeleteTask_Resource_Map(Task_Resource_Map instance);
    partial void InsertTask_Revit_Map(Task_Revit_Map instance);
    partial void UpdateTask_Revit_Map(Task_Revit_Map instance);
    partial void DeleteTask_Revit_Map(Task_Revit_Map instance);
    partial void InsertTask_Successor_Map(Task_Successor_Map instance);
    partial void UpdateTask_Successor_Map(Task_Successor_Map instance);
    partial void DeleteTask_Successor_Map(Task_Successor_Map instance);
    partial void InsertUnit_Of_Measurement(Unit_Of_Measurement instance);
    partial void UpdateUnit_Of_Measurement(Unit_Of_Measurement instance);
    partial void DeleteUnit_Of_Measurement(Unit_Of_Measurement instance);
    partial void InsertUsername_Password(Username_Password instance);
    partial void UpdateUsername_Password(Username_Password instance);
    partial void DeleteUsername_Password(Username_Password instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["fujita_BIM4D5D_PlannerConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BIM_5DPlanner> BIM_5DPlanners
		{
			get
			{
				return this.GetTable<BIM_5DPlanner>();
			}
		}
		
		public System.Data.Linq.Table<Cost_Master> Cost_Masters
		{
			get
			{
				return this.GetTable<Cost_Master>();
			}
		}
		
		public System.Data.Linq.Table<Element> Elements
		{
			get
			{
				return this.GetTable<Element>();
			}
		}
		
		public System.Data.Linq.Table<Virtual_Element_Type> Virtual_Element_Types
		{
			get
			{
				return this.GetTable<Virtual_Element_Type>();
			}
		}
		
		public System.Data.Linq.Table<Formwork_Parameter> Formwork_Parameters
		{
			get
			{
				return this.GetTable<Formwork_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<Formwork_Parameters_lb> Formwork_Parameters_lbs
		{
			get
			{
				return this.GetTable<Formwork_Parameters_lb>();
			}
		}
		
		public System.Data.Linq.Table<Global_Setting> Global_Settings
		{
			get
			{
				return this.GetTable<Global_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Material_Option> Material_Options
		{
			get
			{
				return this.GetTable<Material_Option>();
			}
		}
		
		public System.Data.Linq.Table<Material_Variance> Material_Variances
		{
			get
			{
				return this.GetTable<Material_Variance>();
			}
		}
		
		public System.Data.Linq.Table<Material_Variance_Subdivision> Material_Variance_Subdivisions
		{
			get
			{
				return this.GetTable<Material_Variance_Subdivision>();
			}
		}
		
		public System.Data.Linq.Table<Msprojoffice_Diff> Msprojoffice_Diffs
		{
			get
			{
				return this.GetTable<Msprojoffice_Diff>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<Project_Detail> Project_Details
		{
			get
			{
				return this.GetTable<Project_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Project_Exclude_Category> Project_Exclude_Categories
		{
			get
			{
				return this.GetTable<Project_Exclude_Category>();
			}
		}
		
		public System.Data.Linq.Table<Project_Filter> Project_Filters
		{
			get
			{
				return this.GetTable<Project_Filter>();
			}
		}
		
		public System.Data.Linq.Table<Project_Filter_Dtl> Project_Filter_Dtls
		{
			get
			{
				return this.GetTable<Project_Filter_Dtl>();
			}
		}
		
		public System.Data.Linq.Table<Project_Task_Detail> Project_Task_Details
		{
			get
			{
				return this.GetTable<Project_Task_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Project_Version> Project_Versions
		{
			get
			{
				return this.GetTable<Project_Version>();
			}
		}
		
		public System.Data.Linq.Table<Rebar_Formwork_Report> Rebar_Formwork_Reports
		{
			get
			{
				return this.GetTable<Rebar_Formwork_Report>();
			}
		}
		
		public System.Data.Linq.Table<Rebar_Parameter> Rebar_Parameters
		{
			get
			{
				return this.GetTable<Rebar_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<Revit_Msprojoffice> Revit_Msprojoffices
		{
			get
			{
				return this.GetTable<Revit_Msprojoffice>();
			}
		}
		
		public System.Data.Linq.Table<Revit_Project_Model> Revit_Project_Models
		{
			get
			{
				return this.GetTable<Revit_Project_Model>();
			}
		}
		
		public System.Data.Linq.Table<Revit_Project_Model_Test> Revit_Project_Model_Tests
		{
			get
			{
				return this.GetTable<Revit_Project_Model_Test>();
			}
		}
		
		public System.Data.Linq.Table<Task_Predecessor_Map> Task_Predecessor_Maps
		{
			get
			{
				return this.GetTable<Task_Predecessor_Map>();
			}
		}
		
		public System.Data.Linq.Table<Task_Resource_Map> Task_Resource_Maps
		{
			get
			{
				return this.GetTable<Task_Resource_Map>();
			}
		}
		
		public System.Data.Linq.Table<Task_Revit_Map> Task_Revit_Maps
		{
			get
			{
				return this.GetTable<Task_Revit_Map>();
			}
		}
		
		public System.Data.Linq.Table<Task_Successor_Map> Task_Successor_Maps
		{
			get
			{
				return this.GetTable<Task_Successor_Map>();
			}
		}
		
		public System.Data.Linq.Table<Unit_Of_Measurement> Unit_Of_Measurements
		{
			get
			{
				return this.GetTable<Unit_Of_Measurement>();
			}
		}
		
		public System.Data.Linq.Table<Username_Password> Username_Passwords
		{
			get
			{
				return this.GetTable<Username_Password>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIM_5DPlanner")]
	public partial class BIM_5DPlanner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _category;
		
		private string _cost_component;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void Oncost_componentChanging(string value);
    partial void Oncost_componentChanged();
    #endregion
		
		public BIM_5DPlanner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(1000)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost_component", DbType="NVarChar(1000)")]
		public string cost_component
		{
			get
			{
				return this._cost_component;
			}
			set
			{
				if ((this._cost_component != value))
				{
					this.Oncost_componentChanging(value);
					this.SendPropertyChanging();
					this._cost_component = value;
					this.SendPropertyChanged("cost_component");
					this.Oncost_componentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cost_Master")]
	public partial class Cost_Master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _material_variance_subdiv_id;
		
		private System.DateTime _eff_date;
		
		private System.DateTime _eff_date_end;
		
		private decimal _cost;
		
		private string _modified_by;
		
		private System.DateTime _modified_on;
		
		private long _material_option_id;
		
		private EntityRef<Material_Option> _Material_Option;
		
		private EntityRef<Material_Variance_Subdivision> _Material_Variance_Subdivision;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onmaterial_variance_subdiv_idChanging(long value);
    partial void Onmaterial_variance_subdiv_idChanged();
    partial void Oneff_dateChanging(System.DateTime value);
    partial void Oneff_dateChanged();
    partial void Oneff_date_endChanging(System.DateTime value);
    partial void Oneff_date_endChanged();
    partial void OncostChanging(decimal value);
    partial void OncostChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_onChanging(System.DateTime value);
    partial void Onmodified_onChanged();
    partial void Onmaterial_option_idChanging(long value);
    partial void Onmaterial_option_idChanged();
    #endregion
		
		public Cost_Master()
		{
			this._Material_Option = default(EntityRef<Material_Option>);
			this._Material_Variance_Subdivision = default(EntityRef<Material_Variance_Subdivision>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_material_variance_subdiv_id", DbType="BigInt NOT NULL")]
		public long material_variance_subdiv_id
		{
			get
			{
				return this._material_variance_subdiv_id;
			}
			set
			{
				if ((this._material_variance_subdiv_id != value))
				{
					if (this._Material_Variance_Subdivision.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmaterial_variance_subdiv_idChanging(value);
					this.SendPropertyChanging();
					this._material_variance_subdiv_id = value;
					this.SendPropertyChanged("material_variance_subdiv_id");
					this.Onmaterial_variance_subdiv_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eff_date", DbType="Date NOT NULL")]
		public System.DateTime eff_date
		{
			get
			{
				return this._eff_date;
			}
			set
			{
				if ((this._eff_date != value))
				{
					this.Oneff_dateChanging(value);
					this.SendPropertyChanging();
					this._eff_date = value;
					this.SendPropertyChanged("eff_date");
					this.Oneff_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eff_date_end", DbType="Date NOT NULL")]
		public System.DateTime eff_date_end
		{
			get
			{
				return this._eff_date_end;
			}
			set
			{
				if ((this._eff_date_end != value))
				{
					this.Oneff_date_endChanging(value);
					this.SendPropertyChanging();
					this._eff_date_end = value;
					this.SendPropertyChanged("eff_date_end");
					this.Oneff_date_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(18,2) NOT NULL")]
		public decimal cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_on", DbType="DateTime NOT NULL")]
		public System.DateTime modified_on
		{
			get
			{
				return this._modified_on;
			}
			set
			{
				if ((this._modified_on != value))
				{
					this.Onmodified_onChanging(value);
					this.SendPropertyChanging();
					this._modified_on = value;
					this.SendPropertyChanged("modified_on");
					this.Onmodified_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_material_option_id", DbType="BigInt NOT NULL")]
		public long material_option_id
		{
			get
			{
				return this._material_option_id;
			}
			set
			{
				if ((this._material_option_id != value))
				{
					if (this._Material_Option.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmaterial_option_idChanging(value);
					this.SendPropertyChanging();
					this._material_option_id = value;
					this.SendPropertyChanged("material_option_id");
					this.Onmaterial_option_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Option_Cost_Master", Storage="_Material_Option", ThisKey="material_option_id", OtherKey="id", IsForeignKey=true)]
		public Material_Option Material_Option
		{
			get
			{
				return this._Material_Option.Entity;
			}
			set
			{
				Material_Option previousValue = this._Material_Option.Entity;
				if (((previousValue != value) 
							|| (this._Material_Option.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material_Option.Entity = null;
						previousValue.Cost_Masters.Remove(this);
					}
					this._Material_Option.Entity = value;
					if ((value != null))
					{
						value.Cost_Masters.Add(this);
						this._material_option_id = value.id;
					}
					else
					{
						this._material_option_id = default(long);
					}
					this.SendPropertyChanged("Material_Option");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Variance_Subdivision_Cost_Master", Storage="_Material_Variance_Subdivision", ThisKey="material_variance_subdiv_id", OtherKey="id", IsForeignKey=true)]
		public Material_Variance_Subdivision Material_Variance_Subdivision
		{
			get
			{
				return this._Material_Variance_Subdivision.Entity;
			}
			set
			{
				Material_Variance_Subdivision previousValue = this._Material_Variance_Subdivision.Entity;
				if (((previousValue != value) 
							|| (this._Material_Variance_Subdivision.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material_Variance_Subdivision.Entity = null;
						previousValue.Cost_Masters.Remove(this);
					}
					this._Material_Variance_Subdivision.Entity = value;
					if ((value != null))
					{
						value.Cost_Masters.Add(this);
						this._material_variance_subdiv_id = value.id;
					}
					else
					{
						this._material_variance_subdiv_id = default(long);
					}
					this.SendPropertyChanged("Material_Variance_Subdivision");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Element")]
	public partial class Element : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _created_by;
		
		private System.DateTime _created_on;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    #endregion
		
		public Element()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Virtual_Element_Type")]
	public partial class Virtual_Element_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _created_by;
		
		private System.DateTime _created_on;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    #endregion
		
		public Virtual_Element_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Formwork_Parameters")]
	public partial class Formwork_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _rep_id;
		
		private System.Nullable<decimal> _area;
		
		private System.Nullable<decimal> _cost;
		
		private System.Nullable<decimal> _total_cost;
		
		private EntitySet<Formwork_Parameters_lb> _Formwork_Parameters_lbs;
		
		private EntityRef<Rebar_Formwork_Report> _Rebar_Formwork_Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onrep_idChanging(long value);
    partial void Onrep_idChanged();
    partial void OnareaChanging(System.Nullable<decimal> value);
    partial void OnareaChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    partial void Ontotal_costChanging(System.Nullable<decimal> value);
    partial void Ontotal_costChanged();
    #endregion
		
		public Formwork_Parameter()
		{
			this._Formwork_Parameters_lbs = new EntitySet<Formwork_Parameters_lb>(new Action<Formwork_Parameters_lb>(this.attach_Formwork_Parameters_lbs), new Action<Formwork_Parameters_lb>(this.detach_Formwork_Parameters_lbs));
			this._Rebar_Formwork_Report = default(EntityRef<Rebar_Formwork_Report>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rep_id", DbType="BigInt NOT NULL")]
		public long rep_id
		{
			get
			{
				return this._rep_id;
			}
			set
			{
				if ((this._rep_id != value))
				{
					if (this._Rebar_Formwork_Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrep_idChanging(value);
					this.SendPropertyChanging();
					this._rep_id = value;
					this.SendPropertyChanged("rep_id");
					this.Onrep_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_cost
		{
			get
			{
				return this._total_cost;
			}
			set
			{
				if ((this._total_cost != value))
				{
					this.Ontotal_costChanging(value);
					this.SendPropertyChanging();
					this._total_cost = value;
					this.SendPropertyChanged("total_cost");
					this.Ontotal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formwork_Parameter_Formwork_Parameters_lb", Storage="_Formwork_Parameters_lbs", ThisKey="id", OtherKey="fw_id")]
		public EntitySet<Formwork_Parameters_lb> Formwork_Parameters_lbs
		{
			get
			{
				return this._Formwork_Parameters_lbs;
			}
			set
			{
				this._Formwork_Parameters_lbs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rebar_Formwork_Report_Formwork_Parameter", Storage="_Rebar_Formwork_Report", ThisKey="rep_id", OtherKey="id", IsForeignKey=true)]
		public Rebar_Formwork_Report Rebar_Formwork_Report
		{
			get
			{
				return this._Rebar_Formwork_Report.Entity;
			}
			set
			{
				Rebar_Formwork_Report previousValue = this._Rebar_Formwork_Report.Entity;
				if (((previousValue != value) 
							|| (this._Rebar_Formwork_Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rebar_Formwork_Report.Entity = null;
						previousValue.Formwork_Parameters.Remove(this);
					}
					this._Rebar_Formwork_Report.Entity = value;
					if ((value != null))
					{
						value.Formwork_Parameters.Add(this);
						this._rep_id = value.id;
					}
					else
					{
						this._rep_id = default(long);
					}
					this.SendPropertyChanged("Rebar_Formwork_Report");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Formwork_Parameters_lbs(Formwork_Parameters_lb entity)
		{
			this.SendPropertyChanging();
			entity.Formwork_Parameter = this;
		}
		
		private void detach_Formwork_Parameters_lbs(Formwork_Parameters_lb entity)
		{
			this.SendPropertyChanging();
			entity.Formwork_Parameter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Formwork_Parameters_lb")]
	public partial class Formwork_Parameters_lb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _fw_id;
		
		private System.Nullable<decimal> _length;
		
		private System.Nullable<decimal> _width;
		
		private EntityRef<Formwork_Parameter> _Formwork_Parameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onfw_idChanging(long value);
    partial void Onfw_idChanged();
    partial void OnlengthChanging(System.Nullable<decimal> value);
    partial void OnlengthChanged();
    partial void OnwidthChanging(System.Nullable<decimal> value);
    partial void OnwidthChanged();
    #endregion
		
		public Formwork_Parameters_lb()
		{
			this._Formwork_Parameter = default(EntityRef<Formwork_Parameter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fw_id", DbType="BigInt NOT NULL")]
		public long fw_id
		{
			get
			{
				return this._fw_id;
			}
			set
			{
				if ((this._fw_id != value))
				{
					if (this._Formwork_Parameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfw_idChanging(value);
					this.SendPropertyChanging();
					this._fw_id = value;
					this.SendPropertyChanged("fw_id");
					this.Onfw_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formwork_Parameter_Formwork_Parameters_lb", Storage="_Formwork_Parameter", ThisKey="fw_id", OtherKey="id", IsForeignKey=true)]
		public Formwork_Parameter Formwork_Parameter
		{
			get
			{
				return this._Formwork_Parameter.Entity;
			}
			set
			{
				Formwork_Parameter previousValue = this._Formwork_Parameter.Entity;
				if (((previousValue != value) 
							|| (this._Formwork_Parameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Formwork_Parameter.Entity = null;
						previousValue.Formwork_Parameters_lbs.Remove(this);
					}
					this._Formwork_Parameter.Entity = value;
					if ((value != null))
					{
						value.Formwork_Parameters_lbs.Add(this);
						this._fw_id = value.id;
					}
					else
					{
						this._fw_id = default(long);
					}
					this.SendPropertyChanged("Formwork_Parameter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Global_Settings")]
	public partial class Global_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _web_server_name;
		
		private string _site_manager_name;
		
		private string _site_manager_email;
		
		private string _designer_name;
		
		private string _designer_email;
		
		private string _database_server_path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onweb_server_nameChanging(string value);
    partial void Onweb_server_nameChanged();
    partial void Onsite_manager_nameChanging(string value);
    partial void Onsite_manager_nameChanged();
    partial void Onsite_manager_emailChanging(string value);
    partial void Onsite_manager_emailChanged();
    partial void Ondesigner_nameChanging(string value);
    partial void Ondesigner_nameChanged();
    partial void Ondesigner_emailChanging(string value);
    partial void Ondesigner_emailChanged();
    partial void Ondatabase_server_pathChanging(string value);
    partial void Ondatabase_server_pathChanged();
    #endregion
		
		public Global_Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_web_server_name", DbType="NVarChar(1000)")]
		public string web_server_name
		{
			get
			{
				return this._web_server_name;
			}
			set
			{
				if ((this._web_server_name != value))
				{
					this.Onweb_server_nameChanging(value);
					this.SendPropertyChanging();
					this._web_server_name = value;
					this.SendPropertyChanged("web_server_name");
					this.Onweb_server_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_manager_name", DbType="NVarChar(1000)")]
		public string site_manager_name
		{
			get
			{
				return this._site_manager_name;
			}
			set
			{
				if ((this._site_manager_name != value))
				{
					this.Onsite_manager_nameChanging(value);
					this.SendPropertyChanging();
					this._site_manager_name = value;
					this.SendPropertyChanged("site_manager_name");
					this.Onsite_manager_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_manager_email", DbType="NVarChar(100)")]
		public string site_manager_email
		{
			get
			{
				return this._site_manager_email;
			}
			set
			{
				if ((this._site_manager_email != value))
				{
					this.Onsite_manager_emailChanging(value);
					this.SendPropertyChanging();
					this._site_manager_email = value;
					this.SendPropertyChanged("site_manager_email");
					this.Onsite_manager_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designer_name", DbType="NVarChar(1000)")]
		public string designer_name
		{
			get
			{
				return this._designer_name;
			}
			set
			{
				if ((this._designer_name != value))
				{
					this.Ondesigner_nameChanging(value);
					this.SendPropertyChanging();
					this._designer_name = value;
					this.SendPropertyChanged("designer_name");
					this.Ondesigner_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designer_email", DbType="NVarChar(100)")]
		public string designer_email
		{
			get
			{
				return this._designer_email;
			}
			set
			{
				if ((this._designer_email != value))
				{
					this.Ondesigner_emailChanging(value);
					this.SendPropertyChanging();
					this._designer_email = value;
					this.SendPropertyChanged("designer_email");
					this.Ondesigner_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_database_server_path", DbType="NVarChar(1000)")]
		public string database_server_path
		{
			get
			{
				return this._database_server_path;
			}
			set
			{
				if ((this._database_server_path != value))
				{
					this.Ondatabase_server_pathChanging(value);
					this.SendPropertyChanging();
					this._database_server_path = value;
					this.SendPropertyChanged("database_server_path");
					this.Ondatabase_server_pathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _created_by;
		
		private System.DateTime _created_on;
		
		private EntitySet<Material_Variance> _Material_Variances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    #endregion
		
		public Material()
		{
			this._Material_Variances = new EntitySet<Material_Variance>(new Action<Material_Variance>(this.attach_Material_Variances), new Action<Material_Variance>(this.detach_Material_Variances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Material_Variance", Storage="_Material_Variances", ThisKey="id", OtherKey="material_id")]
		public EntitySet<Material_Variance> Material_Variances
		{
			get
			{
				return this._Material_Variances;
			}
			set
			{
				this._Material_Variances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material_Variances(Material_Variance entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_Material_Variances(Material_Variance entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material_Option")]
	public partial class Material_Option : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _created_by;
		
		private System.DateTime _created_on;
		
		private EntitySet<Cost_Master> _Cost_Masters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    #endregion
		
		public Material_Option()
		{
			this._Cost_Masters = new EntitySet<Cost_Master>(new Action<Cost_Master>(this.attach_Cost_Masters), new Action<Cost_Master>(this.detach_Cost_Masters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Option_Cost_Master", Storage="_Cost_Masters", ThisKey="id", OtherKey="material_option_id")]
		public EntitySet<Cost_Master> Cost_Masters
		{
			get
			{
				return this._Cost_Masters;
			}
			set
			{
				this._Cost_Masters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cost_Masters(Cost_Master entity)
		{
			this.SendPropertyChanging();
			entity.Material_Option = this;
		}
		
		private void detach_Cost_Masters(Cost_Master entity)
		{
			this.SendPropertyChanging();
			entity.Material_Option = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material_Variance")]
	public partial class Material_Variance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _material_id;
		
		private string _variance;
		
		private string _description;
		
		private string _created_by;
		
		private System.DateTime _created_on;
		
		private EntityRef<Material> _Material;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onmaterial_idChanging(long value);
    partial void Onmaterial_idChanged();
    partial void OnvarianceChanging(string value);
    partial void OnvarianceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    #endregion
		
		public Material_Variance()
		{
			this._Material = default(EntityRef<Material>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_material_id", DbType="BigInt NOT NULL")]
		public long material_id
		{
			get
			{
				return this._material_id;
			}
			set
			{
				if ((this._material_id != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmaterial_idChanging(value);
					this.SendPropertyChanging();
					this._material_id = value;
					this.SendPropertyChanged("material_id");
					this.Onmaterial_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variance", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string variance
		{
			get
			{
				return this._variance;
			}
			set
			{
				if ((this._variance != value))
				{
					this.OnvarianceChanging(value);
					this.SendPropertyChanging();
					this._variance = value;
					this.SendPropertyChanged("variance");
					this.OnvarianceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Material_Variance", Storage="_Material", ThisKey="material_id", OtherKey="id", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.Material_Variances.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.Material_Variances.Add(this);
						this._material_id = value.id;
					}
					else
					{
						this._material_id = default(long);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material_Variance_Subdivision")]
	public partial class Material_Variance_Subdivision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _material_variance_id;
		
		private string _name;
		
		private string _created_by;
		
		private System.DateTime _created_on;
		
		private long _unit_of_measurement;
		
		private int _f_del;
		
		private EntitySet<Cost_Master> _Cost_Masters;
		
		private EntityRef<Unit_Of_Measurement> _Unit_Of_Measurement1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onmaterial_variance_idChanging(long value);
    partial void Onmaterial_variance_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    partial void Onunit_of_measurementChanging(long value);
    partial void Onunit_of_measurementChanged();
    partial void Onf_delChanging(int value);
    partial void Onf_delChanged();
    #endregion
		
		public Material_Variance_Subdivision()
		{
			this._Cost_Masters = new EntitySet<Cost_Master>(new Action<Cost_Master>(this.attach_Cost_Masters), new Action<Cost_Master>(this.detach_Cost_Masters));
			this._Unit_Of_Measurement1 = default(EntityRef<Unit_Of_Measurement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_material_variance_id", DbType="BigInt NOT NULL")]
		public long material_variance_id
		{
			get
			{
				return this._material_variance_id;
			}
			set
			{
				if ((this._material_variance_id != value))
				{
					this.Onmaterial_variance_idChanging(value);
					this.SendPropertyChanging();
					this._material_variance_id = value;
					this.SendPropertyChanged("material_variance_id");
					this.Onmaterial_variance_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit_of_measurement", DbType="BigInt NOT NULL")]
		public long unit_of_measurement
		{
			get
			{
				return this._unit_of_measurement;
			}
			set
			{
				if ((this._unit_of_measurement != value))
				{
					if (this._Unit_Of_Measurement1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onunit_of_measurementChanging(value);
					this.SendPropertyChanging();
					this._unit_of_measurement = value;
					this.SendPropertyChanged("unit_of_measurement");
					this.Onunit_of_measurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_del", DbType="Int NOT NULL")]
		public int f_del
		{
			get
			{
				return this._f_del;
			}
			set
			{
				if ((this._f_del != value))
				{
					this.Onf_delChanging(value);
					this.SendPropertyChanging();
					this._f_del = value;
					this.SendPropertyChanged("f_del");
					this.Onf_delChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Variance_Subdivision_Cost_Master", Storage="_Cost_Masters", ThisKey="id", OtherKey="material_variance_subdiv_id")]
		public EntitySet<Cost_Master> Cost_Masters
		{
			get
			{
				return this._Cost_Masters;
			}
			set
			{
				this._Cost_Masters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Of_Measurement_Material_Variance_Subdivision", Storage="_Unit_Of_Measurement1", ThisKey="unit_of_measurement", OtherKey="id", IsForeignKey=true)]
		public Unit_Of_Measurement Unit_Of_Measurement1
		{
			get
			{
				return this._Unit_Of_Measurement1.Entity;
			}
			set
			{
				Unit_Of_Measurement previousValue = this._Unit_Of_Measurement1.Entity;
				if (((previousValue != value) 
							|| (this._Unit_Of_Measurement1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit_Of_Measurement1.Entity = null;
						previousValue.Material_Variance_Subdivisions.Remove(this);
					}
					this._Unit_Of_Measurement1.Entity = value;
					if ((value != null))
					{
						value.Material_Variance_Subdivisions.Add(this);
						this._unit_of_measurement = value.id;
					}
					else
					{
						this._unit_of_measurement = default(long);
					}
					this.SendPropertyChanged("Unit_Of_Measurement1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cost_Masters(Cost_Master entity)
		{
			this.SendPropertyChanging();
			entity.Material_Variance_Subdivision = this;
		}
		
		private void detach_Cost_Masters(Cost_Master entity)
		{
			this.SendPropertyChanging();
			entity.Material_Variance_Subdivision = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Msprojoffice_Diff")]
	public partial class Msprojoffice_Diff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _proj_id;
		
		private string _comparison_guid;
		
		private System.Nullable<long> _first_version;
		
		private System.Nullable<long> _second_version;
		
		private System.Nullable<int> _f_approved;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_idChanging(System.Nullable<long> value);
    partial void Onproj_idChanged();
    partial void Oncomparison_guidChanging(string value);
    partial void Oncomparison_guidChanged();
    partial void Onfirst_versionChanging(System.Nullable<long> value);
    partial void Onfirst_versionChanged();
    partial void Onsecond_versionChanging(System.Nullable<long> value);
    partial void Onsecond_versionChanged();
    partial void Onf_approvedChanging(System.Nullable<int> value);
    partial void Onf_approvedChanged();
    #endregion
		
		public Msprojoffice_Diff()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_id", DbType="BigInt")]
		public System.Nullable<long> proj_id
		{
			get
			{
				return this._proj_id;
			}
			set
			{
				if ((this._proj_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproj_idChanging(value);
					this.SendPropertyChanging();
					this._proj_id = value;
					this.SendPropertyChanged("proj_id");
					this.Onproj_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comparison_guid", DbType="NVarChar(100)")]
		public string comparison_guid
		{
			get
			{
				return this._comparison_guid;
			}
			set
			{
				if ((this._comparison_guid != value))
				{
					this.Oncomparison_guidChanging(value);
					this.SendPropertyChanging();
					this._comparison_guid = value;
					this.SendPropertyChanged("comparison_guid");
					this.Oncomparison_guidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_version", DbType="BigInt")]
		public System.Nullable<long> first_version
		{
			get
			{
				return this._first_version;
			}
			set
			{
				if ((this._first_version != value))
				{
					this.Onfirst_versionChanging(value);
					this.SendPropertyChanging();
					this._first_version = value;
					this.SendPropertyChanged("first_version");
					this.Onfirst_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_second_version", DbType="BigInt")]
		public System.Nullable<long> second_version
		{
			get
			{
				return this._second_version;
			}
			set
			{
				if ((this._second_version != value))
				{
					this.Onsecond_versionChanging(value);
					this.SendPropertyChanging();
					this._second_version = value;
					this.SendPropertyChanged("second_version");
					this.Onsecond_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_approved", DbType="Int")]
		public System.Nullable<int> f_approved
		{
			get
			{
				return this._f_approved;
			}
			set
			{
				if ((this._f_approved != value))
				{
					this.Onf_approvedChanging(value);
					this.SendPropertyChanging();
					this._f_approved = value;
					this.SendPropertyChanged("f_approved");
					this.Onf_approvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Msprojoffice_Diff", Storage="_Project", ThisKey="proj_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Msprojoffice_Diffs.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Msprojoffice_Diffs.Add(this);
						this._proj_id = value.id;
					}
					else
					{
						this._proj_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _proj_guid;
		
		private System.DateTime _created_on;
		
		private string _name;
		
		private EntitySet<Msprojoffice_Diff> _Msprojoffice_Diffs;
		
		private EntitySet<Project_Detail> _Project_Details;
		
		private EntitySet<Project_Exclude_Category> _Project_Exclude_Categories;
		
		private EntitySet<Project_Filter> _Project_Filters;
		
		private EntitySet<Project_Version> _Project_Versions;
		
		private EntitySet<Rebar_Formwork_Report> _Rebar_Formwork_Reports;
		
		private EntitySet<Revit_Msprojoffice> _Revit_Msprojoffices;
		
		private EntitySet<Revit_Project_Model> _Revit_Project_Models;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_guidChanging(string value);
    partial void Onproj_guidChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Project()
		{
			this._Msprojoffice_Diffs = new EntitySet<Msprojoffice_Diff>(new Action<Msprojoffice_Diff>(this.attach_Msprojoffice_Diffs), new Action<Msprojoffice_Diff>(this.detach_Msprojoffice_Diffs));
			this._Project_Details = new EntitySet<Project_Detail>(new Action<Project_Detail>(this.attach_Project_Details), new Action<Project_Detail>(this.detach_Project_Details));
			this._Project_Exclude_Categories = new EntitySet<Project_Exclude_Category>(new Action<Project_Exclude_Category>(this.attach_Project_Exclude_Categories), new Action<Project_Exclude_Category>(this.detach_Project_Exclude_Categories));
			this._Project_Filters = new EntitySet<Project_Filter>(new Action<Project_Filter>(this.attach_Project_Filters), new Action<Project_Filter>(this.detach_Project_Filters));
			this._Project_Versions = new EntitySet<Project_Version>(new Action<Project_Version>(this.attach_Project_Versions), new Action<Project_Version>(this.detach_Project_Versions));
			this._Rebar_Formwork_Reports = new EntitySet<Rebar_Formwork_Report>(new Action<Rebar_Formwork_Report>(this.attach_Rebar_Formwork_Reports), new Action<Rebar_Formwork_Report>(this.detach_Rebar_Formwork_Reports));
			this._Revit_Msprojoffices = new EntitySet<Revit_Msprojoffice>(new Action<Revit_Msprojoffice>(this.attach_Revit_Msprojoffices), new Action<Revit_Msprojoffice>(this.detach_Revit_Msprojoffices));
			this._Revit_Project_Models = new EntitySet<Revit_Project_Model>(new Action<Revit_Project_Model>(this.attach_Revit_Project_Models), new Action<Revit_Project_Model>(this.detach_Revit_Project_Models));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_guid", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string proj_guid
		{
			get
			{
				return this._proj_guid;
			}
			set
			{
				if ((this._proj_guid != value))
				{
					this.Onproj_guidChanging(value);
					this.SendPropertyChanging();
					this._proj_guid = value;
					this.SendPropertyChanged("proj_guid");
					this.Onproj_guidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Msprojoffice_Diff", Storage="_Msprojoffice_Diffs", ThisKey="id", OtherKey="proj_id")]
		public EntitySet<Msprojoffice_Diff> Msprojoffice_Diffs
		{
			get
			{
				return this._Msprojoffice_Diffs;
			}
			set
			{
				this._Msprojoffice_Diffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Detail", Storage="_Project_Details", ThisKey="id", OtherKey="project_id")]
		public EntitySet<Project_Detail> Project_Details
		{
			get
			{
				return this._Project_Details;
			}
			set
			{
				this._Project_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Exclude_Category", Storage="_Project_Exclude_Categories", ThisKey="id", OtherKey="proj_id")]
		public EntitySet<Project_Exclude_Category> Project_Exclude_Categories
		{
			get
			{
				return this._Project_Exclude_Categories;
			}
			set
			{
				this._Project_Exclude_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Filter", Storage="_Project_Filters", ThisKey="id", OtherKey="proj_id")]
		public EntitySet<Project_Filter> Project_Filters
		{
			get
			{
				return this._Project_Filters;
			}
			set
			{
				this._Project_Filters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Version", Storage="_Project_Versions", ThisKey="id", OtherKey="proj_id")]
		public EntitySet<Project_Version> Project_Versions
		{
			get
			{
				return this._Project_Versions;
			}
			set
			{
				this._Project_Versions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Rebar_Formwork_Report", Storage="_Rebar_Formwork_Reports", ThisKey="id", OtherKey="proj_id")]
		public EntitySet<Rebar_Formwork_Report> Rebar_Formwork_Reports
		{
			get
			{
				return this._Rebar_Formwork_Reports;
			}
			set
			{
				this._Rebar_Formwork_Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Revit_Msprojoffice", Storage="_Revit_Msprojoffices", ThisKey="id", OtherKey="proj_id")]
		public EntitySet<Revit_Msprojoffice> Revit_Msprojoffices
		{
			get
			{
				return this._Revit_Msprojoffices;
			}
			set
			{
				this._Revit_Msprojoffices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Revit_Project_Model", Storage="_Revit_Project_Models", ThisKey="id", OtherKey="project_id")]
		public EntitySet<Revit_Project_Model> Revit_Project_Models
		{
			get
			{
				return this._Revit_Project_Models;
			}
			set
			{
				this._Revit_Project_Models.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Msprojoffice_Diffs(Msprojoffice_Diff entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Msprojoffice_Diffs(Msprojoffice_Diff entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Project_Details(Project_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Project_Details(Project_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Project_Exclude_Categories(Project_Exclude_Category entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Project_Exclude_Categories(Project_Exclude_Category entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Project_Filters(Project_Filter entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Project_Filters(Project_Filter entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Project_Versions(Project_Version entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Project_Versions(Project_Version entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Rebar_Formwork_Reports(Rebar_Formwork_Report entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Rebar_Formwork_Reports(Rebar_Formwork_Report entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Revit_Msprojoffices(Revit_Msprojoffice entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Revit_Msprojoffices(Revit_Msprojoffice entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Revit_Project_Models(Revit_Project_Model entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Revit_Project_Models(Revit_Project_Model entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Details")]
	public partial class Project_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _project_id;
		
		private string _revit_project_file;
		
		private string _ms_project_file;
		
		private string _site_manager_name;
		
		private string _site_manager_email;
		
		private string _designer_name;
		
		private string _designer_email;
		
		private string _country;
		
		private string _currency;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproject_idChanging(long value);
    partial void Onproject_idChanged();
    partial void Onrevit_project_fileChanging(string value);
    partial void Onrevit_project_fileChanged();
    partial void Onms_project_fileChanging(string value);
    partial void Onms_project_fileChanged();
    partial void Onsite_manager_nameChanging(string value);
    partial void Onsite_manager_nameChanged();
    partial void Onsite_manager_emailChanging(string value);
    partial void Onsite_manager_emailChanged();
    partial void Ondesigner_nameChanging(string value);
    partial void Ondesigner_nameChanged();
    partial void Ondesigner_emailChanging(string value);
    partial void Ondesigner_emailChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncurrencyChanging(string value);
    partial void OncurrencyChanged();
    #endregion
		
		public Project_Detail()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="BigInt NOT NULL")]
		public long project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_revit_project_file", DbType="NVarChar(1000)")]
		public string revit_project_file
		{
			get
			{
				return this._revit_project_file;
			}
			set
			{
				if ((this._revit_project_file != value))
				{
					this.Onrevit_project_fileChanging(value);
					this.SendPropertyChanging();
					this._revit_project_file = value;
					this.SendPropertyChanged("revit_project_file");
					this.Onrevit_project_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ms_project_file", DbType="NVarChar(1000)")]
		public string ms_project_file
		{
			get
			{
				return this._ms_project_file;
			}
			set
			{
				if ((this._ms_project_file != value))
				{
					this.Onms_project_fileChanging(value);
					this.SendPropertyChanging();
					this._ms_project_file = value;
					this.SendPropertyChanged("ms_project_file");
					this.Onms_project_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_manager_name", DbType="NVarChar(100)")]
		public string site_manager_name
		{
			get
			{
				return this._site_manager_name;
			}
			set
			{
				if ((this._site_manager_name != value))
				{
					this.Onsite_manager_nameChanging(value);
					this.SendPropertyChanging();
					this._site_manager_name = value;
					this.SendPropertyChanged("site_manager_name");
					this.Onsite_manager_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_site_manager_email", DbType="NVarChar(100)")]
		public string site_manager_email
		{
			get
			{
				return this._site_manager_email;
			}
			set
			{
				if ((this._site_manager_email != value))
				{
					this.Onsite_manager_emailChanging(value);
					this.SendPropertyChanging();
					this._site_manager_email = value;
					this.SendPropertyChanged("site_manager_email");
					this.Onsite_manager_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designer_name", DbType="NVarChar(100)")]
		public string designer_name
		{
			get
			{
				return this._designer_name;
			}
			set
			{
				if ((this._designer_name != value))
				{
					this.Ondesigner_nameChanging(value);
					this.SendPropertyChanging();
					this._designer_name = value;
					this.SendPropertyChanged("designer_name");
					this.Ondesigner_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designer_email", DbType="NVarChar(100)")]
		public string designer_email
		{
			get
			{
				return this._designer_email;
			}
			set
			{
				if ((this._designer_email != value))
				{
					this.Ondesigner_emailChanging(value);
					this.SendPropertyChanging();
					this._designer_email = value;
					this.SendPropertyChanged("designer_email");
					this.Ondesigner_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(100)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="NVarChar(100)")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Detail", Storage="_Project", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Project_Details.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Project_Details.Add(this);
						this._project_id = value.id;
					}
					else
					{
						this._project_id = default(long);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Exclude_Category")]
	public partial class Project_Exclude_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _proj_id;
		
		private string _category;
		
		private System.Nullable<long> _proj_ver_id;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_idChanging(long value);
    partial void Onproj_idChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void Onproj_ver_idChanging(System.Nullable<long> value);
    partial void Onproj_ver_idChanged();
    #endregion
		
		public Project_Exclude_Category()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_id", DbType="BigInt NOT NULL")]
		public long proj_id
		{
			get
			{
				return this._proj_id;
			}
			set
			{
				if ((this._proj_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproj_idChanging(value);
					this.SendPropertyChanging();
					this._proj_id = value;
					this.SendPropertyChanged("proj_id");
					this.Onproj_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_ver_id", DbType="BigInt")]
		public System.Nullable<long> proj_ver_id
		{
			get
			{
				return this._proj_ver_id;
			}
			set
			{
				if ((this._proj_ver_id != value))
				{
					this.Onproj_ver_idChanging(value);
					this.SendPropertyChanging();
					this._proj_ver_id = value;
					this.SendPropertyChanged("proj_ver_id");
					this.Onproj_ver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Exclude_Category", Storage="_Project", ThisKey="proj_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Project_Exclude_Categories.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Project_Exclude_Categories.Add(this);
						this._proj_id = value.id;
					}
					else
					{
						this._proj_id = default(long);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Filter")]
	public partial class Project_Filter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _proj_id;
		
		private string _filter_name;
		
		private System.Nullable<long> _proj_ver_id;
		
		private EntitySet<Project_Filter_Dtl> _Project_Filter_Dtls;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_idChanging(long value);
    partial void Onproj_idChanged();
    partial void Onfilter_nameChanging(string value);
    partial void Onfilter_nameChanged();
    partial void Onproj_ver_idChanging(System.Nullable<long> value);
    partial void Onproj_ver_idChanged();
    #endregion
		
		public Project_Filter()
		{
			this._Project_Filter_Dtls = new EntitySet<Project_Filter_Dtl>(new Action<Project_Filter_Dtl>(this.attach_Project_Filter_Dtls), new Action<Project_Filter_Dtl>(this.detach_Project_Filter_Dtls));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_id", DbType="BigInt NOT NULL")]
		public long proj_id
		{
			get
			{
				return this._proj_id;
			}
			set
			{
				if ((this._proj_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproj_idChanging(value);
					this.SendPropertyChanging();
					this._proj_id = value;
					this.SendPropertyChanged("proj_id");
					this.Onproj_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filter_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string filter_name
		{
			get
			{
				return this._filter_name;
			}
			set
			{
				if ((this._filter_name != value))
				{
					this.Onfilter_nameChanging(value);
					this.SendPropertyChanging();
					this._filter_name = value;
					this.SendPropertyChanged("filter_name");
					this.Onfilter_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_ver_id", DbType="BigInt")]
		public System.Nullable<long> proj_ver_id
		{
			get
			{
				return this._proj_ver_id;
			}
			set
			{
				if ((this._proj_ver_id != value))
				{
					this.Onproj_ver_idChanging(value);
					this.SendPropertyChanging();
					this._proj_ver_id = value;
					this.SendPropertyChanged("proj_ver_id");
					this.Onproj_ver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Filter_Project_Filter_Dtl", Storage="_Project_Filter_Dtls", ThisKey="id", OtherKey="filter_id")]
		public EntitySet<Project_Filter_Dtl> Project_Filter_Dtls
		{
			get
			{
				return this._Project_Filter_Dtls;
			}
			set
			{
				this._Project_Filter_Dtls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Filter", Storage="_Project", ThisKey="proj_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Project_Filters.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Project_Filters.Add(this);
						this._proj_id = value.id;
					}
					else
					{
						this._proj_id = default(long);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Project_Filter_Dtls(Project_Filter_Dtl entity)
		{
			this.SendPropertyChanging();
			entity.Project_Filter = this;
		}
		
		private void detach_Project_Filter_Dtls(Project_Filter_Dtl entity)
		{
			this.SendPropertyChanging();
			entity.Project_Filter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Filter_Dtl")]
	public partial class Project_Filter_Dtl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _filter_id;
		
		private string _filter_category;
		
		private string _filter_sign;
		
		private string _filter_value;
		
		private EntityRef<Project_Filter> _Project_Filter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onfilter_idChanging(long value);
    partial void Onfilter_idChanged();
    partial void Onfilter_categoryChanging(string value);
    partial void Onfilter_categoryChanged();
    partial void Onfilter_signChanging(string value);
    partial void Onfilter_signChanged();
    partial void Onfilter_valueChanging(string value);
    partial void Onfilter_valueChanged();
    #endregion
		
		public Project_Filter_Dtl()
		{
			this._Project_Filter = default(EntityRef<Project_Filter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filter_id", DbType="BigInt NOT NULL")]
		public long filter_id
		{
			get
			{
				return this._filter_id;
			}
			set
			{
				if ((this._filter_id != value))
				{
					if (this._Project_Filter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfilter_idChanging(value);
					this.SendPropertyChanging();
					this._filter_id = value;
					this.SendPropertyChanged("filter_id");
					this.Onfilter_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filter_category", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string filter_category
		{
			get
			{
				return this._filter_category;
			}
			set
			{
				if ((this._filter_category != value))
				{
					this.Onfilter_categoryChanging(value);
					this.SendPropertyChanging();
					this._filter_category = value;
					this.SendPropertyChanged("filter_category");
					this.Onfilter_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filter_sign", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string filter_sign
		{
			get
			{
				return this._filter_sign;
			}
			set
			{
				if ((this._filter_sign != value))
				{
					this.Onfilter_signChanging(value);
					this.SendPropertyChanging();
					this._filter_sign = value;
					this.SendPropertyChanged("filter_sign");
					this.Onfilter_signChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filter_value", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string filter_value
		{
			get
			{
				return this._filter_value;
			}
			set
			{
				if ((this._filter_value != value))
				{
					this.Onfilter_valueChanging(value);
					this.SendPropertyChanging();
					this._filter_value = value;
					this.SendPropertyChanged("filter_value");
					this.Onfilter_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Filter_Project_Filter_Dtl", Storage="_Project_Filter", ThisKey="filter_id", OtherKey="id", IsForeignKey=true)]
		public Project_Filter Project_Filter
		{
			get
			{
				return this._Project_Filter.Entity;
			}
			set
			{
				Project_Filter previousValue = this._Project_Filter.Entity;
				if (((previousValue != value) 
							|| (this._Project_Filter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project_Filter.Entity = null;
						previousValue.Project_Filter_Dtls.Remove(this);
					}
					this._Project_Filter.Entity = value;
					if ((value != null))
					{
						value.Project_Filter_Dtls.Add(this);
						this._filter_id = value.id;
					}
					else
					{
						this._filter_id = default(long);
					}
					this.SendPropertyChanged("Project_Filter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Task_Details")]
	public partial class Project_Task_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _proj_ver_id;
		
		private string _name;
		
		private long _seq;
		
		private string _level;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private System.Nullable<int> _duration;
		
		private System.Nullable<int> _act_duration;
		
		private System.Nullable<int> _progress;
		
		private System.Nullable<decimal> _cost;
		
		private EntitySet<Task_Predecessor_Map> _Task_Predecessor_Maps;
		
		private EntitySet<Task_Resource_Map> _Task_Resource_Maps;
		
		private EntitySet<Task_Revit_Map> _Task_Revit_Maps;
		
		private EntitySet<Task_Successor_Map> _Task_Successor_Maps;
		
		private EntityRef<Project_Version> _Project_Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_ver_idChanging(System.Nullable<long> value);
    partial void Onproj_ver_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnseqChanging(long value);
    partial void OnseqChanged();
    partial void OnlevelChanging(string value);
    partial void OnlevelChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void OndurationChanging(System.Nullable<int> value);
    partial void OndurationChanged();
    partial void Onact_durationChanging(System.Nullable<int> value);
    partial void Onact_durationChanged();
    partial void OnprogressChanging(System.Nullable<int> value);
    partial void OnprogressChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    #endregion
		
		public Project_Task_Detail()
		{
			this._Task_Predecessor_Maps = new EntitySet<Task_Predecessor_Map>(new Action<Task_Predecessor_Map>(this.attach_Task_Predecessor_Maps), new Action<Task_Predecessor_Map>(this.detach_Task_Predecessor_Maps));
			this._Task_Resource_Maps = new EntitySet<Task_Resource_Map>(new Action<Task_Resource_Map>(this.attach_Task_Resource_Maps), new Action<Task_Resource_Map>(this.detach_Task_Resource_Maps));
			this._Task_Revit_Maps = new EntitySet<Task_Revit_Map>(new Action<Task_Revit_Map>(this.attach_Task_Revit_Maps), new Action<Task_Revit_Map>(this.detach_Task_Revit_Maps));
			this._Task_Successor_Maps = new EntitySet<Task_Successor_Map>(new Action<Task_Successor_Map>(this.attach_Task_Successor_Maps), new Action<Task_Successor_Map>(this.detach_Task_Successor_Maps));
			this._Project_Version = default(EntityRef<Project_Version>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_ver_id", DbType="BigInt")]
		public System.Nullable<long> proj_ver_id
		{
			get
			{
				return this._proj_ver_id;
			}
			set
			{
				if ((this._proj_ver_id != value))
				{
					if (this._Project_Version.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproj_ver_idChanging(value);
					this.SendPropertyChanging();
					this._proj_ver_id = value;
					this.SendPropertyChanged("proj_ver_id");
					this.Onproj_ver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq", DbType="BigInt NOT NULL")]
		public long seq
		{
			get
			{
				return this._seq;
			}
			set
			{
				if ((this._seq != value))
				{
					this.OnseqChanging(value);
					this.SendPropertyChanging();
					this._seq = value;
					this.SendPropertyChanged("seq");
					this.OnseqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Int")]
		public System.Nullable<int> duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_duration", DbType="Int")]
		public System.Nullable<int> act_duration
		{
			get
			{
				return this._act_duration;
			}
			set
			{
				if ((this._act_duration != value))
				{
					this.Onact_durationChanging(value);
					this.SendPropertyChanging();
					this._act_duration = value;
					this.SendPropertyChanged("act_duration");
					this.Onact_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_progress", DbType="Int")]
		public System.Nullable<int> progress
		{
			get
			{
				return this._progress;
			}
			set
			{
				if ((this._progress != value))
				{
					this.OnprogressChanging(value);
					this.SendPropertyChanging();
					this._progress = value;
					this.SendPropertyChanged("progress");
					this.OnprogressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Predecessor_Map", Storage="_Task_Predecessor_Maps", ThisKey="id", OtherKey="task_id")]
		public EntitySet<Task_Predecessor_Map> Task_Predecessor_Maps
		{
			get
			{
				return this._Task_Predecessor_Maps;
			}
			set
			{
				this._Task_Predecessor_Maps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Resource_Map", Storage="_Task_Resource_Maps", ThisKey="id", OtherKey="task_id")]
		public EntitySet<Task_Resource_Map> Task_Resource_Maps
		{
			get
			{
				return this._Task_Resource_Maps;
			}
			set
			{
				this._Task_Resource_Maps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Revit_Map", Storage="_Task_Revit_Maps", ThisKey="id", OtherKey="task_id")]
		public EntitySet<Task_Revit_Map> Task_Revit_Maps
		{
			get
			{
				return this._Task_Revit_Maps;
			}
			set
			{
				this._Task_Revit_Maps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Successor_Map", Storage="_Task_Successor_Maps", ThisKey="id", OtherKey="task_id")]
		public EntitySet<Task_Successor_Map> Task_Successor_Maps
		{
			get
			{
				return this._Task_Successor_Maps;
			}
			set
			{
				this._Task_Successor_Maps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Version_Project_Task_Detail", Storage="_Project_Version", ThisKey="proj_ver_id", OtherKey="id", IsForeignKey=true)]
		public Project_Version Project_Version
		{
			get
			{
				return this._Project_Version.Entity;
			}
			set
			{
				Project_Version previousValue = this._Project_Version.Entity;
				if (((previousValue != value) 
							|| (this._Project_Version.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project_Version.Entity = null;
						previousValue.Project_Task_Details.Remove(this);
					}
					this._Project_Version.Entity = value;
					if ((value != null))
					{
						value.Project_Task_Details.Add(this);
						this._proj_ver_id = value.id;
					}
					else
					{
						this._proj_ver_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Project_Version");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Task_Predecessor_Maps(Task_Predecessor_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = this;
		}
		
		private void detach_Task_Predecessor_Maps(Task_Predecessor_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = null;
		}
		
		private void attach_Task_Resource_Maps(Task_Resource_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = this;
		}
		
		private void detach_Task_Resource_Maps(Task_Resource_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = null;
		}
		
		private void attach_Task_Revit_Maps(Task_Revit_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = this;
		}
		
		private void detach_Task_Revit_Maps(Task_Revit_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = null;
		}
		
		private void attach_Task_Successor_Maps(Task_Successor_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = this;
		}
		
		private void detach_Task_Successor_Maps(Task_Successor_Map entity)
		{
			this.SendPropertyChanging();
			entity.Project_Task_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Version")]
	public partial class Project_Version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _proj_id;
		
		private long _version;
		
		private string _created_by;
		
		private System.DateTime _created_on;
		
		private string _approved_by;
		
		private System.Nullable<System.DateTime> _approved_on;
		
		private int _f_reject;
		
		private EntitySet<Project_Task_Detail> _Project_Task_Details;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_idChanging(long value);
    partial void Onproj_idChanged();
    partial void OnversionChanging(long value);
    partial void OnversionChanged();
    partial void Oncreated_byChanging(string value);
    partial void Oncreated_byChanged();
    partial void Oncreated_onChanging(System.DateTime value);
    partial void Oncreated_onChanged();
    partial void Onapproved_byChanging(string value);
    partial void Onapproved_byChanged();
    partial void Onapproved_onChanging(System.Nullable<System.DateTime> value);
    partial void Onapproved_onChanged();
    partial void Onf_rejectChanging(int value);
    partial void Onf_rejectChanged();
    #endregion
		
		public Project_Version()
		{
			this._Project_Task_Details = new EntitySet<Project_Task_Detail>(new Action<Project_Task_Detail>(this.attach_Project_Task_Details), new Action<Project_Task_Detail>(this.detach_Project_Task_Details));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_id", DbType="BigInt NOT NULL")]
		public long proj_id
		{
			get
			{
				return this._proj_id;
			}
			set
			{
				if ((this._proj_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproj_idChanging(value);
					this.SendPropertyChanging();
					this._proj_id = value;
					this.SendPropertyChanged("proj_id");
					this.Onproj_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="BigInt NOT NULL")]
		public long version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="NVarChar(100)")]
		public string created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_on", DbType="DateTime NOT NULL")]
		public System.DateTime created_on
		{
			get
			{
				return this._created_on;
			}
			set
			{
				if ((this._created_on != value))
				{
					this.Oncreated_onChanging(value);
					this.SendPropertyChanging();
					this._created_on = value;
					this.SendPropertyChanged("created_on");
					this.Oncreated_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_by", DbType="NVarChar(100)")]
		public string approved_by
		{
			get
			{
				return this._approved_by;
			}
			set
			{
				if ((this._approved_by != value))
				{
					this.Onapproved_byChanging(value);
					this.SendPropertyChanging();
					this._approved_by = value;
					this.SendPropertyChanged("approved_by");
					this.Onapproved_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_on", DbType="DateTime")]
		public System.Nullable<System.DateTime> approved_on
		{
			get
			{
				return this._approved_on;
			}
			set
			{
				if ((this._approved_on != value))
				{
					this.Onapproved_onChanging(value);
					this.SendPropertyChanging();
					this._approved_on = value;
					this.SendPropertyChanged("approved_on");
					this.Onapproved_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_reject", DbType="Int NOT NULL")]
		public int f_reject
		{
			get
			{
				return this._f_reject;
			}
			set
			{
				if ((this._f_reject != value))
				{
					this.Onf_rejectChanging(value);
					this.SendPropertyChanging();
					this._f_reject = value;
					this.SendPropertyChanged("f_reject");
					this.Onf_rejectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Version_Project_Task_Detail", Storage="_Project_Task_Details", ThisKey="id", OtherKey="proj_ver_id")]
		public EntitySet<Project_Task_Detail> Project_Task_Details
		{
			get
			{
				return this._Project_Task_Details;
			}
			set
			{
				this._Project_Task_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project_Version", Storage="_Project", ThisKey="proj_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Project_Versions.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Project_Versions.Add(this);
						this._proj_id = value.id;
					}
					else
					{
						this._proj_id = default(long);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Project_Task_Details(Project_Task_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Project_Version = this;
		}
		
		private void detach_Project_Task_Details(Project_Task_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Project_Version = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rebar_Formwork_Report")]
	public partial class Rebar_Formwork_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _proj_id;
		
		private System.Nullable<long> _element_id;
		
		private string _element_name;
		
		private EntitySet<Formwork_Parameter> _Formwork_Parameters;
		
		private EntitySet<Rebar_Parameter> _Rebar_Parameters;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_idChanging(long value);
    partial void Onproj_idChanged();
    partial void Onelement_idChanging(System.Nullable<long> value);
    partial void Onelement_idChanged();
    partial void Onelement_nameChanging(string value);
    partial void Onelement_nameChanged();
    #endregion
		
		public Rebar_Formwork_Report()
		{
			this._Formwork_Parameters = new EntitySet<Formwork_Parameter>(new Action<Formwork_Parameter>(this.attach_Formwork_Parameters), new Action<Formwork_Parameter>(this.detach_Formwork_Parameters));
			this._Rebar_Parameters = new EntitySet<Rebar_Parameter>(new Action<Rebar_Parameter>(this.attach_Rebar_Parameters), new Action<Rebar_Parameter>(this.detach_Rebar_Parameters));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_id", DbType="BigInt NOT NULL")]
		public long proj_id
		{
			get
			{
				return this._proj_id;
			}
			set
			{
				if ((this._proj_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproj_idChanging(value);
					this.SendPropertyChanging();
					this._proj_id = value;
					this.SendPropertyChanged("proj_id");
					this.Onproj_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_element_id", DbType="BigInt")]
		public System.Nullable<long> element_id
		{
			get
			{
				return this._element_id;
			}
			set
			{
				if ((this._element_id != value))
				{
					this.Onelement_idChanging(value);
					this.SendPropertyChanging();
					this._element_id = value;
					this.SendPropertyChanged("element_id");
					this.Onelement_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_element_name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string element_name
		{
			get
			{
				return this._element_name;
			}
			set
			{
				if ((this._element_name != value))
				{
					this.Onelement_nameChanging(value);
					this.SendPropertyChanging();
					this._element_name = value;
					this.SendPropertyChanged("element_name");
					this.Onelement_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rebar_Formwork_Report_Formwork_Parameter", Storage="_Formwork_Parameters", ThisKey="id", OtherKey="rep_id")]
		public EntitySet<Formwork_Parameter> Formwork_Parameters
		{
			get
			{
				return this._Formwork_Parameters;
			}
			set
			{
				this._Formwork_Parameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rebar_Formwork_Report_Rebar_Parameter", Storage="_Rebar_Parameters", ThisKey="id", OtherKey="rep_id")]
		public EntitySet<Rebar_Parameter> Rebar_Parameters
		{
			get
			{
				return this._Rebar_Parameters;
			}
			set
			{
				this._Rebar_Parameters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Rebar_Formwork_Report", Storage="_Project", ThisKey="proj_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Rebar_Formwork_Reports.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Rebar_Formwork_Reports.Add(this);
						this._proj_id = value.id;
					}
					else
					{
						this._proj_id = default(long);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Formwork_Parameters(Formwork_Parameter entity)
		{
			this.SendPropertyChanging();
			entity.Rebar_Formwork_Report = this;
		}
		
		private void detach_Formwork_Parameters(Formwork_Parameter entity)
		{
			this.SendPropertyChanging();
			entity.Rebar_Formwork_Report = null;
		}
		
		private void attach_Rebar_Parameters(Rebar_Parameter entity)
		{
			this.SendPropertyChanging();
			entity.Rebar_Formwork_Report = this;
		}
		
		private void detach_Rebar_Parameters(Rebar_Parameter entity)
		{
			this.SendPropertyChanging();
			entity.Rebar_Formwork_Report = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rebar_Parameters")]
	public partial class Rebar_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _rep_id;
		
		private System.Nullable<decimal> _weight;
		
		private System.Nullable<int> _no_of_mainbar;
		
		private System.Nullable<int> _no_of_stirrups;
		
		private EntityRef<Rebar_Formwork_Report> _Rebar_Formwork_Report;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onrep_idChanging(long value);
    partial void Onrep_idChanged();
    partial void OnweightChanging(System.Nullable<decimal> value);
    partial void OnweightChanged();
    partial void Onno_of_mainbarChanging(System.Nullable<int> value);
    partial void Onno_of_mainbarChanged();
    partial void Onno_of_stirrupsChanging(System.Nullable<int> value);
    partial void Onno_of_stirrupsChanged();
    #endregion
		
		public Rebar_Parameter()
		{
			this._Rebar_Formwork_Report = default(EntityRef<Rebar_Formwork_Report>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rep_id", DbType="BigInt NOT NULL")]
		public long rep_id
		{
			get
			{
				return this._rep_id;
			}
			set
			{
				if ((this._rep_id != value))
				{
					if (this._Rebar_Formwork_Report.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrep_idChanging(value);
					this.SendPropertyChanging();
					this._rep_id = value;
					this.SendPropertyChanged("rep_id");
					this.Onrep_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_of_mainbar", DbType="Int")]
		public System.Nullable<int> no_of_mainbar
		{
			get
			{
				return this._no_of_mainbar;
			}
			set
			{
				if ((this._no_of_mainbar != value))
				{
					this.Onno_of_mainbarChanging(value);
					this.SendPropertyChanging();
					this._no_of_mainbar = value;
					this.SendPropertyChanged("no_of_mainbar");
					this.Onno_of_mainbarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_of_stirrups", DbType="Int")]
		public System.Nullable<int> no_of_stirrups
		{
			get
			{
				return this._no_of_stirrups;
			}
			set
			{
				if ((this._no_of_stirrups != value))
				{
					this.Onno_of_stirrupsChanging(value);
					this.SendPropertyChanging();
					this._no_of_stirrups = value;
					this.SendPropertyChanged("no_of_stirrups");
					this.Onno_of_stirrupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rebar_Formwork_Report_Rebar_Parameter", Storage="_Rebar_Formwork_Report", ThisKey="rep_id", OtherKey="id", IsForeignKey=true)]
		public Rebar_Formwork_Report Rebar_Formwork_Report
		{
			get
			{
				return this._Rebar_Formwork_Report.Entity;
			}
			set
			{
				Rebar_Formwork_Report previousValue = this._Rebar_Formwork_Report.Entity;
				if (((previousValue != value) 
							|| (this._Rebar_Formwork_Report.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rebar_Formwork_Report.Entity = null;
						previousValue.Rebar_Parameters.Remove(this);
					}
					this._Rebar_Formwork_Report.Entity = value;
					if ((value != null))
					{
						value.Rebar_Parameters.Add(this);
						this._rep_id = value.id;
					}
					else
					{
						this._rep_id = default(long);
					}
					this.SendPropertyChanged("Rebar_Formwork_Report");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Resource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revit_Msprojoffice")]
	public partial class Revit_Msprojoffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _proj_id;
		
		private System.Xml.Linq.XElement _msprojoffice_file;
		
		private string _modified_by;
		
		private System.Nullable<System.DateTime> _modified_on;
		
		private System.Nullable<long> _version;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproj_idChanging(System.Nullable<long> value);
    partial void Onproj_idChanged();
    partial void Onmsprojoffice_fileChanging(System.Xml.Linq.XElement value);
    partial void Onmsprojoffice_fileChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_onChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_onChanged();
    partial void OnversionChanging(System.Nullable<long> value);
    partial void OnversionChanged();
    #endregion
		
		public Revit_Msprojoffice()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proj_id", DbType="BigInt")]
		public System.Nullable<long> proj_id
		{
			get
			{
				return this._proj_id;
			}
			set
			{
				if ((this._proj_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproj_idChanging(value);
					this.SendPropertyChanging();
					this._proj_id = value;
					this.SendPropertyChanged("proj_id");
					this.Onproj_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msprojoffice_file", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement msprojoffice_file
		{
			get
			{
				return this._msprojoffice_file;
			}
			set
			{
				if ((this._msprojoffice_file != value))
				{
					this.Onmsprojoffice_fileChanging(value);
					this.SendPropertyChanging();
					this._msprojoffice_file = value;
					this.SendPropertyChanged("msprojoffice_file");
					this.Onmsprojoffice_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_on", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified_on
		{
			get
			{
				return this._modified_on;
			}
			set
			{
				if ((this._modified_on != value))
				{
					this.Onmodified_onChanging(value);
					this.SendPropertyChanging();
					this._modified_on = value;
					this.SendPropertyChanged("modified_on");
					this.Onmodified_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="BigInt")]
		public System.Nullable<long> version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Revit_Msprojoffice", Storage="_Project", ThisKey="proj_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Revit_Msprojoffices.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Revit_Msprojoffices.Add(this);
						this._proj_id = value.id;
					}
					else
					{
						this._proj_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revit_Project_Model")]
	public partial class Revit_Project_Model : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _project_id;
		
		private string _element_type_id;
		
		private System.Nullable<long> _element_id;
		
		private string _elemnt_dtl;
		
		private int _f_del;
		
		private string _modified_by;
		
		private System.DateTime _modified_on;
		
		private int _f_virtual;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onproject_idChanging(long value);
    partial void Onproject_idChanged();
    partial void Onelement_type_idChanging(string value);
    partial void Onelement_type_idChanged();
    partial void Onelement_idChanging(System.Nullable<long> value);
    partial void Onelement_idChanged();
    partial void Onelemnt_dtlChanging(string value);
    partial void Onelemnt_dtlChanged();
    partial void Onf_delChanging(int value);
    partial void Onf_delChanged();
    partial void Onmodified_byChanging(string value);
    partial void Onmodified_byChanged();
    partial void Onmodified_onChanging(System.DateTime value);
    partial void Onmodified_onChanged();
    partial void Onf_virtualChanging(int value);
    partial void Onf_virtualChanged();
    #endregion
		
		public Revit_Project_Model()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="BigInt NOT NULL")]
		public long project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_element_type_id", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string element_type_id
		{
			get
			{
				return this._element_type_id;
			}
			set
			{
				if ((this._element_type_id != value))
				{
					this.Onelement_type_idChanging(value);
					this.SendPropertyChanging();
					this._element_type_id = value;
					this.SendPropertyChanged("element_type_id");
					this.Onelement_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_element_id", DbType="BigInt")]
		public System.Nullable<long> element_id
		{
			get
			{
				return this._element_id;
			}
			set
			{
				if ((this._element_id != value))
				{
					this.Onelement_idChanging(value);
					this.SendPropertyChanging();
					this._element_id = value;
					this.SendPropertyChanged("element_id");
					this.Onelement_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_elemnt_dtl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string elemnt_dtl
		{
			get
			{
				return this._elemnt_dtl;
			}
			set
			{
				if ((this._elemnt_dtl != value))
				{
					this.Onelemnt_dtlChanging(value);
					this.SendPropertyChanging();
					this._elemnt_dtl = value;
					this.SendPropertyChanged("elemnt_dtl");
					this.Onelemnt_dtlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_del", DbType="Int NOT NULL")]
		public int f_del
		{
			get
			{
				return this._f_del;
			}
			set
			{
				if ((this._f_del != value))
				{
					this.Onf_delChanging(value);
					this.SendPropertyChanging();
					this._f_del = value;
					this.SendPropertyChanged("f_del");
					this.Onf_delChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_by", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string modified_by
		{
			get
			{
				return this._modified_by;
			}
			set
			{
				if ((this._modified_by != value))
				{
					this.Onmodified_byChanging(value);
					this.SendPropertyChanging();
					this._modified_by = value;
					this.SendPropertyChanged("modified_by");
					this.Onmodified_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_on", DbType="DateTime NOT NULL")]
		public System.DateTime modified_on
		{
			get
			{
				return this._modified_on;
			}
			set
			{
				if ((this._modified_on != value))
				{
					this.Onmodified_onChanging(value);
					this.SendPropertyChanging();
					this._modified_on = value;
					this.SendPropertyChanged("modified_on");
					this.Onmodified_onChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_virtual", DbType="Int NOT NULL")]
		public int f_virtual
		{
			get
			{
				return this._f_virtual;
			}
			set
			{
				if ((this._f_virtual != value))
				{
					this.Onf_virtualChanging(value);
					this.SendPropertyChanging();
					this._f_virtual = value;
					this.SendPropertyChanged("f_virtual");
					this.Onf_virtualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Revit_Project_Model", Storage="_Project", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Revit_Project_Models.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Revit_Project_Models.Add(this);
						this._project_id = value.id;
					}
					else
					{
						this._project_id = default(long);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revit_Project_Model_Test")]
	public partial class Revit_Project_Model_Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _Project_id;
		
		private System.Nullable<long> _element_id;
		
		private System.Nullable<long> _element_no;
		
		private string _parameter_name;
		
		private string _parameter_value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnProject_idChanging(System.Nullable<long> value);
    partial void OnProject_idChanged();
    partial void Onelement_idChanging(System.Nullable<long> value);
    partial void Onelement_idChanged();
    partial void Onelement_noChanging(System.Nullable<long> value);
    partial void Onelement_noChanged();
    partial void Onparameter_nameChanging(string value);
    partial void Onparameter_nameChanged();
    partial void Onparameter_valueChanging(string value);
    partial void Onparameter_valueChanged();
    #endregion
		
		public Revit_Project_Model_Test()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_id", DbType="BigInt")]
		public System.Nullable<long> Project_id
		{
			get
			{
				return this._Project_id;
			}
			set
			{
				if ((this._Project_id != value))
				{
					this.OnProject_idChanging(value);
					this.SendPropertyChanging();
					this._Project_id = value;
					this.SendPropertyChanged("Project_id");
					this.OnProject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_element_id", DbType="BigInt")]
		public System.Nullable<long> element_id
		{
			get
			{
				return this._element_id;
			}
			set
			{
				if ((this._element_id != value))
				{
					this.Onelement_idChanging(value);
					this.SendPropertyChanging();
					this._element_id = value;
					this.SendPropertyChanged("element_id");
					this.Onelement_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_element_no", DbType="BigInt")]
		public System.Nullable<long> element_no
		{
			get
			{
				return this._element_no;
			}
			set
			{
				if ((this._element_no != value))
				{
					this.Onelement_noChanging(value);
					this.SendPropertyChanging();
					this._element_no = value;
					this.SendPropertyChanged("element_no");
					this.Onelement_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameter_name", DbType="NVarChar(MAX)")]
		public string parameter_name
		{
			get
			{
				return this._parameter_name;
			}
			set
			{
				if ((this._parameter_name != value))
				{
					this.Onparameter_nameChanging(value);
					this.SendPropertyChanging();
					this._parameter_name = value;
					this.SendPropertyChanged("parameter_name");
					this.Onparameter_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameter_value", DbType="NVarChar(MAX)")]
		public string parameter_value
		{
			get
			{
				return this._parameter_value;
			}
			set
			{
				if ((this._parameter_value != value))
				{
					this.Onparameter_valueChanging(value);
					this.SendPropertyChanging();
					this._parameter_value = value;
					this.SendPropertyChanged("parameter_value");
					this.Onparameter_valueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task_Predecessor_Map")]
	public partial class Task_Predecessor_Map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _task_id;
		
		private long _predecessor_task_id;
		
		private EntityRef<Project_Task_Detail> _Project_Task_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Ontask_idChanging(long value);
    partial void Ontask_idChanged();
    partial void Onpredecessor_task_idChanging(long value);
    partial void Onpredecessor_task_idChanged();
    #endregion
		
		public Task_Predecessor_Map()
		{
			this._Project_Task_Detail = default(EntityRef<Project_Task_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task_id", DbType="BigInt NOT NULL")]
		public long task_id
		{
			get
			{
				return this._task_id;
			}
			set
			{
				if ((this._task_id != value))
				{
					if (this._Project_Task_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontask_idChanging(value);
					this.SendPropertyChanging();
					this._task_id = value;
					this.SendPropertyChanged("task_id");
					this.Ontask_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_predecessor_task_id", DbType="BigInt NOT NULL")]
		public long predecessor_task_id
		{
			get
			{
				return this._predecessor_task_id;
			}
			set
			{
				if ((this._predecessor_task_id != value))
				{
					this.Onpredecessor_task_idChanging(value);
					this.SendPropertyChanging();
					this._predecessor_task_id = value;
					this.SendPropertyChanged("predecessor_task_id");
					this.Onpredecessor_task_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Predecessor_Map", Storage="_Project_Task_Detail", ThisKey="task_id", OtherKey="id", IsForeignKey=true)]
		public Project_Task_Detail Project_Task_Detail
		{
			get
			{
				return this._Project_Task_Detail.Entity;
			}
			set
			{
				Project_Task_Detail previousValue = this._Project_Task_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Project_Task_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project_Task_Detail.Entity = null;
						previousValue.Task_Predecessor_Maps.Remove(this);
					}
					this._Project_Task_Detail.Entity = value;
					if ((value != null))
					{
						value.Task_Predecessor_Maps.Add(this);
						this._task_id = value.id;
					}
					else
					{
						this._task_id = default(long);
					}
					this.SendPropertyChanged("Project_Task_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task_Resource_Map")]
	public partial class Task_Resource_Map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _task_id;
		
		private long _resource_id;
		
		private EntityRef<Project_Task_Detail> _Project_Task_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Ontask_idChanging(long value);
    partial void Ontask_idChanged();
    partial void Onresource_idChanging(long value);
    partial void Onresource_idChanged();
    #endregion
		
		public Task_Resource_Map()
		{
			this._Project_Task_Detail = default(EntityRef<Project_Task_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task_id", DbType="BigInt NOT NULL")]
		public long task_id
		{
			get
			{
				return this._task_id;
			}
			set
			{
				if ((this._task_id != value))
				{
					if (this._Project_Task_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontask_idChanging(value);
					this.SendPropertyChanging();
					this._task_id = value;
					this.SendPropertyChanged("task_id");
					this.Ontask_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resource_id", DbType="BigInt NOT NULL")]
		public long resource_id
		{
			get
			{
				return this._resource_id;
			}
			set
			{
				if ((this._resource_id != value))
				{
					this.Onresource_idChanging(value);
					this.SendPropertyChanging();
					this._resource_id = value;
					this.SendPropertyChanged("resource_id");
					this.Onresource_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Resource_Map", Storage="_Project_Task_Detail", ThisKey="task_id", OtherKey="id", IsForeignKey=true)]
		public Project_Task_Detail Project_Task_Detail
		{
			get
			{
				return this._Project_Task_Detail.Entity;
			}
			set
			{
				Project_Task_Detail previousValue = this._Project_Task_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Project_Task_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project_Task_Detail.Entity = null;
						previousValue.Task_Resource_Maps.Remove(this);
					}
					this._Project_Task_Detail.Entity = value;
					if ((value != null))
					{
						value.Task_Resource_Maps.Add(this);
						this._task_id = value.id;
					}
					else
					{
						this._task_id = default(long);
					}
					this.SendPropertyChanged("Project_Task_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task_Revit_Map")]
	public partial class Task_Revit_Map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _task_id;
		
		private long _element_id;
		
		private EntityRef<Project_Task_Detail> _Project_Task_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Ontask_idChanging(long value);
    partial void Ontask_idChanged();
    partial void Onelement_idChanging(long value);
    partial void Onelement_idChanged();
    #endregion
		
		public Task_Revit_Map()
		{
			this._Project_Task_Detail = default(EntityRef<Project_Task_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task_id", DbType="BigInt NOT NULL")]
		public long task_id
		{
			get
			{
				return this._task_id;
			}
			set
			{
				if ((this._task_id != value))
				{
					if (this._Project_Task_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontask_idChanging(value);
					this.SendPropertyChanging();
					this._task_id = value;
					this.SendPropertyChanged("task_id");
					this.Ontask_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_element_id", DbType="BigInt NOT NULL")]
		public long element_id
		{
			get
			{
				return this._element_id;
			}
			set
			{
				if ((this._element_id != value))
				{
					this.Onelement_idChanging(value);
					this.SendPropertyChanging();
					this._element_id = value;
					this.SendPropertyChanged("element_id");
					this.Onelement_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Revit_Map", Storage="_Project_Task_Detail", ThisKey="task_id", OtherKey="id", IsForeignKey=true)]
		public Project_Task_Detail Project_Task_Detail
		{
			get
			{
				return this._Project_Task_Detail.Entity;
			}
			set
			{
				Project_Task_Detail previousValue = this._Project_Task_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Project_Task_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project_Task_Detail.Entity = null;
						previousValue.Task_Revit_Maps.Remove(this);
					}
					this._Project_Task_Detail.Entity = value;
					if ((value != null))
					{
						value.Task_Revit_Maps.Add(this);
						this._task_id = value.id;
					}
					else
					{
						this._task_id = default(long);
					}
					this.SendPropertyChanged("Project_Task_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task_Successor_Map")]
	public partial class Task_Successor_Map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _task_id;
		
		private long _successor_task_id;
		
		private EntityRef<Project_Task_Detail> _Project_Task_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Ontask_idChanging(long value);
    partial void Ontask_idChanged();
    partial void Onsuccessor_task_idChanging(long value);
    partial void Onsuccessor_task_idChanged();
    #endregion
		
		public Task_Successor_Map()
		{
			this._Project_Task_Detail = default(EntityRef<Project_Task_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task_id", DbType="BigInt NOT NULL")]
		public long task_id
		{
			get
			{
				return this._task_id;
			}
			set
			{
				if ((this._task_id != value))
				{
					if (this._Project_Task_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontask_idChanging(value);
					this.SendPropertyChanging();
					this._task_id = value;
					this.SendPropertyChanged("task_id");
					this.Ontask_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_successor_task_id", DbType="BigInt NOT NULL")]
		public long successor_task_id
		{
			get
			{
				return this._successor_task_id;
			}
			set
			{
				if ((this._successor_task_id != value))
				{
					this.Onsuccessor_task_idChanging(value);
					this.SendPropertyChanging();
					this._successor_task_id = value;
					this.SendPropertyChanged("successor_task_id");
					this.Onsuccessor_task_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task_Detail_Task_Successor_Map", Storage="_Project_Task_Detail", ThisKey="task_id", OtherKey="id", IsForeignKey=true)]
		public Project_Task_Detail Project_Task_Detail
		{
			get
			{
				return this._Project_Task_Detail.Entity;
			}
			set
			{
				Project_Task_Detail previousValue = this._Project_Task_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Project_Task_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project_Task_Detail.Entity = null;
						previousValue.Task_Successor_Maps.Remove(this);
					}
					this._Project_Task_Detail.Entity = value;
					if ((value != null))
					{
						value.Task_Successor_Maps.Add(this);
						this._task_id = value.id;
					}
					else
					{
						this._task_id = default(long);
					}
					this.SendPropertyChanged("Project_Task_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit_Of_Measurement")]
	public partial class Unit_Of_Measurement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _unit;
		
		private EntitySet<Material_Variance_Subdivision> _Material_Variance_Subdivisions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    #endregion
		
		public Unit_Of_Measurement()
		{
			this._Material_Variance_Subdivisions = new EntitySet<Material_Variance_Subdivision>(new Action<Material_Variance_Subdivision>(this.attach_Material_Variance_Subdivisions), new Action<Material_Variance_Subdivision>(this.detach_Material_Variance_Subdivisions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unit_Of_Measurement_Material_Variance_Subdivision", Storage="_Material_Variance_Subdivisions", ThisKey="id", OtherKey="unit_of_measurement")]
		public EntitySet<Material_Variance_Subdivision> Material_Variance_Subdivisions
		{
			get
			{
				return this._Material_Variance_Subdivisions;
			}
			set
			{
				this._Material_Variance_Subdivisions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material_Variance_Subdivisions(Material_Variance_Subdivision entity)
		{
			this.SendPropertyChanging();
			entity.Unit_Of_Measurement1 = this;
		}
		
		private void detach_Material_Variance_Subdivisions(Material_Variance_Subdivision entity)
		{
			this.SendPropertyChanging();
			entity.Unit_Of_Measurement1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Username_Password")]
	public partial class Username_Password : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private long _id;
		
		private int _f_admin;
		
		private int _f_active;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _email;
		
		private System.Nullable<long> _phone;
		
		private System.Nullable<long> _emp_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onf_adminChanging(int value);
    partial void Onf_adminChanged();
    partial void Onf_activeChanging(int value);
    partial void Onf_activeChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(System.Nullable<long> value);
    partial void OnphoneChanged();
    partial void Onemp_idChanging(System.Nullable<long> value);
    partial void Onemp_idChanged();
    #endregion
		
		public Username_Password()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_admin", DbType="Int NOT NULL")]
		public int f_admin
		{
			get
			{
				return this._f_admin;
			}
			set
			{
				if ((this._f_admin != value))
				{
					this.Onf_adminChanging(value);
					this.SendPropertyChanging();
					this._f_admin = value;
					this.SendPropertyChanged("f_admin");
					this.Onf_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_active", DbType="Int NOT NULL")]
		public int f_active
		{
			get
			{
				return this._f_active;
			}
			set
			{
				if ((this._f_active != value))
				{
					this.Onf_activeChanging(value);
					this.SendPropertyChanging();
					this._f_active = value;
					this.SendPropertyChanged("f_active");
					this.Onf_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(1000)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(1000)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(1000)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="BigInt")]
		public System.Nullable<long> phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="BigInt")]
		public System.Nullable<long> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
